package Program;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;

public class RoundedJListExample {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(RoundedJListExample::createAndShowGUI);
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Rounded JList Example");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 300);

        DefaultListModel<String> listModel = new DefaultListModel<>();
        listModel.addElement("Note 1");
        listModel.addElement("Note 2");
        listModel.addElement("Note 3");
        listModel.addElement("Note 4");

        JList<String> jList = new JList<>(listModel);
        jList.setCellRenderer(new RoundedCellRenderer());

        JScrollPane scrollPane = new JScrollPane(jList);
        frame.add(scrollPane);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    static class RoundedCellRenderer extends JPanel implements ListCellRenderer<String> {
        private JLabel label;

        RoundedCellRenderer() {
            setLayout(new BorderLayout());
            label = new JLabel();
            label.setOpaque(false);
            label.setBorder(new EmptyBorder(10, 10, 10, 10));
            add(label, BorderLayout.CENTER);
            setOpaque(false);
        }

        @Override
        public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
            label.setText(value);

            if (isSelected) {
                label.setForeground(list.getSelectionForeground());
                setBackground(list.getSelectionBackground());
            } else {
                label.setForeground(list.getForeground());
                setBackground(list.getBackground());
            }

            return this;
        }

        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2 = (Graphics2D) g;
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            if (getBackground() != null) {
                g2.setColor(getBackground());
                g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
            }

            super.paintComponent(g);
        }
    }
}
