package OOP;

import javax.swing.*;
import javax.swing.plaf.basic.BasicScrollBarUI;

import java.awt.*;

public class Act16 {
	
	private static Color colorprimary = new Color(0,10,37,255);
	private static Color colorsecondary = new Color(26,32,45,255);
	private static Color foreground = new Color(169,171,176,255);
	
    public static void main(String[] args) {
        JFrame frame = new JFrame("Notepad");
        JTextArea textArea = new JTextArea(20, 60);
        textArea.setBackground(colorsecondary);
        textArea.setForeground(foreground);
        textArea.setBorder(null);
        textArea.setCaretColor(foreground);
        textArea.putClientProperty("caretWidth", 2);
        textArea.setFont(new Font("Consolas", Font.PLAIN, 16));
        
        
        JScrollPane scrollPane = new JScrollPane(textArea);
        frame.setLayout(new BorderLayout());
        frame.setIconImage(new ImageIcon("C:\\Users\\aizhar\\Downloads\\notepad.png").getImage());
        scrollPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI1());
        scrollPane.getHorizontalScrollBar().setUI(new CustomScrollBarUI1());
        scrollPane.getVerticalScrollBar().setBackground(colorsecondary);
        scrollPane.getHorizontalScrollBar().setBackground(colorsecondary);
        scrollPane.getHorizontalScrollBar().setPreferredSize(new Dimension(0, 5));
        scrollPane.getVerticalScrollBar().setPreferredSize(new Dimension(5, 0));
        
        //show vertical scrollbar
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setBackground(colorsecondary);

        JPanel statusPanel = new JPanel();
        statusPanel.setLayout(new BorderLayout());
        JLabel status = new JLabel("Ln 1, Col 1      | 5 characters                             | 100%    | Windows (CRLF)             | UTF-8");
        status.setBorder(null);
        statusPanel.add(status);
        statusPanel.setBackground(colorprimary);
        status.setForeground(foreground);
        statusPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        frame.add(statusPanel, BorderLayout.SOUTH);

        
        String[] fileMenuItemsStr = {
        	    "New Tab",
        	    "New Window",
        	    "Open",
        	    "Save As",
        	    "Save All",
        	    "Page Setup",
        	    "Print",
        	    "Close Tab",
        	    "Close Window",
        	    "Exit"
        	};

        	String[] editMenuItemsStr = {
        	    "Undo",
        	    "Cut",
        	    "Copy",
        	    "Paste",
        	    "Delete",
        	    "Explain with Copilot",
        	    "Find",
        	    "Find Next",
        	    "Find Previous",
        	    "Replace",
        	    "Go To",
        	    "Select All",
        	    "Time/Date",
        	    "Font"
        	};

        	String[] viewMenuItemsStr = {
        	    "Zoom In",
        	    "Zoom Out",
        	    "Restore Default Zoom",
        	    "✔ Status Bar",
        	    "✔ Word Wrap"
        	};

        	JMenu zoomMenu = new JMenu("Zoom");
        	zoomMenu.add(new JMenuItem(viewMenuItemsStr[0]));
        	zoomMenu.add(new JMenuItem(viewMenuItemsStr[1]));
        	zoomMenu.add(new JMenuItem(viewMenuItemsStr[2]));

        	JMenu fileMenu = new JMenu("File");
        	for (int x=0; x < (fileMenuItemsStr.length)-1;x++) {
        		if(x == 5 || x==9 ) {
					JSeparator separator = new JSeparator();
					separator.setForeground(foreground);
					fileMenu.add(separator);
					
				} else {
				JMenuItem menuItem = new JMenuItem(fileMenuItemsStr[x]);
				menuItem.setForeground(foreground);
				menuItem.setBackground(colorprimary);
				menuItem.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        	    fileMenu.add(menuItem);
				}
        	}
        	

        	JMenu editMenu = new JMenu("Edit");
			for (int x = 0; x < editMenuItemsStr.length; x++) {
				if(x == 1 || x==6 || x==8 || x==9 || x==14||x==17) {
					JSeparator separator = new JSeparator();
					separator.setForeground(foreground);
					editMenu.add(separator);
					
				} else {
					editMenu.add(new JMenuItem(editMenuItemsStr[x]));
				}
				
			}
			
			
            JMenu viewMenu = new JMenu("View");
			for (int x = 0; x < viewMenuItemsStr.length; x++) {
				viewMenu.add(new JMenuItem(viewMenuItemsStr[x]));
			}

            	
        	JMenuBar menuBar = new JMenuBar();
        	menuBar.add(fileMenu);
        	menuBar.add(editMenu);
        	menuBar.add(viewMenu);
        	
        menuBar.setBackground(colorprimary);
        menuBar.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        
        viewMenu.setForeground(foreground);
        viewMenu.setBackground(colorprimary);
        editMenu.setForeground(foreground);
        editMenu.setBackground(colorprimary);
        fileMenu.setForeground(foreground);
        fileMenu.setBackground(colorprimary);
        fileMenu.getComponent(0).setBackground(colorprimary);
        
        frame.setJMenuBar(menuBar);
        frame.add(scrollPane, BorderLayout.CENTER);
        
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }
		
}

//Custom Scroll Bar UI
class CustomScrollBarUI1 extends BasicScrollBarUI {
	private static final int ARC_WIDTH = 5;
	private static final int ARC_HEIGHT = 5;

	private static Color colorsecondary = new Color(26,32,45,255);
	private static Color foreground = new Color(169,171,176,255);

	protected JButton createDecreaseButton(int orientation) {
		return createArrowButton();
	}

	protected JButton createIncreaseButton(int orientation) {
		return createArrowButton();
	}

	private JButton createArrowButton() {
		JButton button = new JButton();
		button.setOpaque(true);
		button.setBackground(colorsecondary);
		button.setBorder(BorderFactory.createLineBorder(colorsecondary, 5));
		return button;
	}

	protected void paintTrack(Graphics g, JComponent c, Rectangle trackBounds) {
		Graphics2D g2d = (Graphics2D) g.create();
		g2d.setColor(colorsecondary);
		g2d.fillRoundRect(trackBounds.x, trackBounds.y, trackBounds.width, trackBounds.height, ARC_WIDTH, ARC_HEIGHT);
		g2d.dispose();
	}

	protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {
		Graphics2D g2d = (Graphics2D) g.create();
		g2d.setColor(foreground);
		g2d.fillRoundRect(thumbBounds.x, thumbBounds.y, thumbBounds.width, thumbBounds.height, ARC_WIDTH, ARC_HEIGHT);
		g2d.dispose();
	}
}
